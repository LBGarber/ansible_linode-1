# {{ module }}

{% if description %}
{% for line in description %}
{{ line }}

{% endfor %}
{% endif %}

- [Examples](#examples)
- [Parameters](#parameters)
- [Return Values](#return-values)

## Examples

{% for example in examples %}```yaml{{ example }}
```

{% endfor %}

## Parameters

{% macro options_display_req(opts, level, required) %}
{% for name, spec in opts.items() %}
{% if not spec.doc_hide and ((spec.required and required) or (not spec.required and not required)) %}
{% set required_text = '**(Required)**' if spec.required else '' %}
{% set type_text = '(`%s`)' % spec.type if spec.type else '' %}
{{ "    " * level }}- `{{ name }}` {{type_text}}{% if spec.description %} - {{ required_text }} {% for line in spec.description %}{{ line }} {% endfor %} {% if spec.default or spec.choices %}({% if spec.choices %}Choices: {% for choice in spec.choices %} `{{ choice }}`{% endfor %}{% endif %}{% if spec.default %} Default: `{{ spec.default }}`{% endif %}){% endif %}{% endif %}

{% if spec.suboptions %}{{ options_display(spec.suboptions, level + 1) }}{% endif %}
{% endif %}
{% endfor %}
{% endmacro %}

{% macro options_display(opts, level) %}{{ options_display_req(opts, level, True) }}{{ options_display_req(opts, level, False) }}{% endmacro %}

{{ options_display(options, 0) }}

## Return Values

{% for name, spec in return_values.items() %}
- `{{ name }}`{% if spec.description %} - {% for line in spec.description %}{{ line }}{% endfor %}{% endif %}

{% if spec.sample %}

    - Sample Response:
{% for sample in spec.sample %}
        ```json
{% for line in sample.split('\n') %}
        {{ line }}
{% endfor %}
        ```
{% endfor %}
{% endif %}
{% if spec.docs_url %}
    - See the [Linode API response documentation]({{spec.docs_url}}) for a list of returned fields
{% endif %}


{% endfor %}