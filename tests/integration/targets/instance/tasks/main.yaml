- name: Run instance integration tests
  block:
    - name: Create a Linode instance
      linode.cloud.instance:
        api_token: '{{ api_token }}'
        label: 'ansible-test-{{ ansible_date_time.epoch }}'
        region: us-southeast
        type: g6-standard-1
        image: linode/ubuntu20.04
        root_pass: Fn$$oobar123
        private_ip: true
        state: present
      register: create

    - name: Assert instance created
      assert:
        that:
          - create.changed
          - create.instance.status == 'provisioning'
          - create.instance.ipv4|length > 1

    - name: Create a Linode instance without a root password
      linode.cloud.instance:
        api_token: '{{ api_token }}'
        label: 'ansible-test-nopass-{{ ansible_date_time.epoch }}'
        region: us-east
        type: g6-standard-1
        image: linode/ubuntu20.04
        private_ip: true
        state: present
      register: create_nopass

    - name: Assert instance created
      assert:
        that:
          - create_nopass.changed
          - create_nopass.instance.status == 'provisioning'
          - create_nopass.instance.ipv4|length > 1

    - name: Get info about the instance by id
      linode.cloud.instance_info:
        api_token: '{{ api_token }}'
        id: '{{ create.instance.id }}'
      register: info_id

    - name: Assert instance info
      assert:
        that:
          - info_id.instance.ipv4|length > 1
          - info_id.instance.region == 'us-southeast'
          - info_id.configs|length == 1

    - name: Get info about the instance by label
      linode.cloud.instance_info:
        api_token: '{{ api_token }}'
        label: '{{ create.instance.label }}'
      register: info_label

    - name: Assert instance info
      assert:
        that:
          - info_label.instance.ipv4|length > 1
          - info_label.instance.region == 'us-southeast'
          - info_label.configs|length == 1

    - name: Update the instance region and type (recreate disallowed)
      linode.cloud.instance:
        api_token: '{{ api_token }}'
        label: '{{ create_nopass.instance.label }}'
        region: us-southeast
        group: funny
        type: g6-standard-2
        image: linode/ubuntu20.04
        private_ip: true
        state: present
      register: recreate_nopass_noforce
      failed_when:
        - recreate_nopass_noforce.changed == true

    - name: Update the instance
      linode.cloud.instance:
        api_token: '{{ api_token }}'
        label: '{{ create_nopass.instance.label }}'
        region: us-east
        group: funny
        type: g6-standard-1
        image: linode/ubuntu20.04
        private_ip: true
        state: present
      register: update_nopass

    - name: Assert update
      assert:
        that:
          - update_nopass.instance.group == 'funny'

    - name: Create a Linode instance with interface
      linode.cloud.instance:
        api_token: '{{ api_token }}'
        label: 'ansible-test-{{ ansible_date_time.epoch }}-i'
        region: us-southeast
        type: g6-standard-1
        image: linode/ubuntu20.04
        interfaces:
          - purpose: vlan
            label: really-cool-vlan
        private_ip: true
        state: present
      register: create_interface

    - name: Assert instance created
      assert:
        that:
          - create_interface.changed
          - create_interface.instance.status == 'provisioning'
          - create_interface.instance.ipv4|length > 1

          - create_interface.configs[0].interfaces[0].purpose == 'vlan'
          - create_interface.configs[0].interfaces[0].label == 'really-cool-vlan'

    - name: Update the instance interfaces
      linode.cloud.instance:
        api_token: '{{ api_token }}'
        label: '{{ create_interface.instance.label }}'
        region: us-southeast
        group: funny
        type: g6-standard-1
        image: linode/ubuntu20.04
        private_ip: true
        interfaces:
          - purpose: vlan
            label: cool-vlan
          - purpose: public
        state: present
      register: update_interface

    - name: Assert update
      assert:
        that:
          - update_interface.configs[0].interfaces[0].purpose == 'vlan'
          - update_interface.configs[0].interfaces[0].label == 'cool-vlan'

          - update_interface.configs[0].interfaces[1].purpose == 'public'

    - name: Update the instance interfaces
      linode.cloud.instance:
        api_token: '{{ api_token }}'
        label: '{{ create_interface.instance.label }}'
        region: us-southeast
        group: funny
        type: g6-standard-1
        image: linode/ubuntu20.04
        private_ip: true
        interfaces:
          - purpose: vlan
            label: cool-vlan
          - purpose: public
        state: present
      register: update_interface_noupdate

    - name: Assert no update
      assert:
        that:
          - update_interface_noupdate.changed == false

  always:
    - ignore_errors: yes
      block:
        - name: Delete a Linode instance
          linode.cloud.instance:
            api_token: '{{ api_token }}'
            label: '{{ create.instance.label }}'
            state: absent
          register: delete

        - name: Assert instance delete succeeded
          assert:
            that:
              - delete.changed
              - delete.instance.id == create.instance.id

        - name: Delete a Linode instance
          linode.cloud.instance:
            api_token: '{{ api_token }}'
            label: '{{ create_interface.instance.label }}'
            state: absent
          register: delete_interface

        - name: Assert instance delete succeeded
          assert:
            that:
              - delete_interface.changed
              - delete_interface.instance.id == create_interface.instance.id

        - name: Delete a Linode instance
          linode.cloud.instance:
            api_token: '{{ api_token }}'
            label: '{{ update_nopass.instance.label }}'
            state: absent
          register: delete_nopass

        - name: Assert instance delete succeeded
          assert:
            that:
              - delete_nopass.changed
              - delete_nopass.instance.id == update_nopass.instance.id
